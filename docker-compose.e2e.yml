version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "${SQL_SERVER_PASSWORD:-TestPassword123}"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P '${SQL_SERVER_PASSWORD:-TestPassword123}' -C -Q 'SELECT 1'"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 120s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: src/backend/gateways/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=WaaedTest;User Id=sa;Password=${SQL_SERVER_PASSWORD:-TestPassword123};TrustServerCertificate=true;
      - ENABLE_RABBITMQ_HEALTH_CHECK=false
      - ENABLE_REDIS_HEALTH_CHECK=false
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

networks:
  default:
    name: waaed-e2e-network
