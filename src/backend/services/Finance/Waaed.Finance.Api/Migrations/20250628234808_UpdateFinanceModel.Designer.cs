// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Waaed.Finance.Api.Data;

#nullable disable

namespace Waaed.Finance.Api.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20250628234808_UpdateFinanceModel")]
    partial class UpdateFinanceModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Waaed.Finance.Api.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AcademicYear")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AllocatedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SpentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AttachmentPath")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("NextDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaidBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RecurrencePattern")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AcademicYear")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeeCategories");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCategoryBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeeCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Grade")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeCategoryId");

                    b.ToTable("FeeCategoryBatches");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AcademicYear")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AmountDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CollectedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeeStructureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FeeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ForMonth")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("LateFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeStructureId");

                    b.HasIndex("ReceiptNumber")
                        .IsUnique();

                    b.HasIndex("StudentId");

                    b.ToTable("FeeCollections");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCollectionSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeeCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasLateFee")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("LateFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LateFeePercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("LateFeeRecurrenceInterval")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LateFeeRecurrenceType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LateFeeType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("NotifyBeforeDue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NotifyDaysBefore")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotifyOnOverdue")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotifyOnStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SendNotifications")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeCategoryId");

                    b.ToTable("FeeCollectionSchedules");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicabilityScope")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("BatchName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FeeCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpecificStudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentCategory")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeCategoryId");

                    b.ToTable("FeeDiscounts");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeParticular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApplicabilityType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("FeeCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTaxable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SpecificStudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentCategory")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TaxTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeCategoryId");

                    b.HasIndex("TaxTypeId");

                    b.ToTable("FeeParticulars");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ChequeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChequeNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CollectedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FeeCollectionScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdvancePayment")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRefunded")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RefundDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundReason")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentFeeAssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeCollectionScheduleId");

                    b.HasIndex("ReceiptNumber")
                        .IsUnique();

                    b.HasIndex("StudentFeeAssignmentId");

                    b.ToTable("FeePayments");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AcademicYear")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AdmissionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExaminationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HostelFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("LaboratoryFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LibraryFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MiscellaneousFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentFrequency")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TransportFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TuitionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeeStructures");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FinancialReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FeeCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FeePending")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneratedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NetProfit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OperationalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalaryPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FinancialReports");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.PayrollEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HouseRentAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IncomeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LoanDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MedicalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherAllowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherDeductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OvertimeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OvertimeHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PayrollMonth")
                        .HasColumnType("TEXT");

                    b.Property<int>("PresentDays")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("ProfessionalTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ProvidentFund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalDeductions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TransportAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId", "PayrollMonth")
                        .IsUnique();

                    b.ToTable("PayrollEntries");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentEmail")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentPhone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("RollNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.StudentFeeAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BaseAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FeeCollectionScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWaived")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("LateFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OverdueDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("WaivedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("WaivedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WaiverReason")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeeCollectionScheduleId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentFeeAssignments");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.TaxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaxTypes");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.Expense", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.Budget", "Budget")
                        .WithMany("Expenses")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCategoryBatch", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeCategory", "FeeCategory")
                        .WithMany("FeeCategoryBatches")
                        .HasForeignKey("FeeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeCategory");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCollection", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeStructure", "FeeStructure")
                        .WithMany("FeeCollections")
                        .HasForeignKey("FeeStructureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Waaed.Finance.Api.Entities.Student", "Student")
                        .WithMany("FeeCollections")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FeeStructure");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCollectionSchedule", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeCategory", "FeeCategory")
                        .WithMany("FeeCollectionSchedules")
                        .HasForeignKey("FeeCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FeeCategory");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeDiscount", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeCategory", "FeeCategory")
                        .WithMany("FeeDiscounts")
                        .HasForeignKey("FeeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeCategory");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeParticular", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeCategory", "FeeCategory")
                        .WithMany("FeeParticulars")
                        .HasForeignKey("FeeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waaed.Finance.Api.Entities.TaxType", "TaxType")
                        .WithMany("FeeParticulars")
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("FeeCategory");

                    b.Navigation("TaxType");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeePayment", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeCollectionSchedule", "FeeCollectionSchedule")
                        .WithMany("FeePayments")
                        .HasForeignKey("FeeCollectionScheduleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Waaed.Finance.Api.Entities.StudentFeeAssignment", "StudentFeeAssignment")
                        .WithMany("FeePayments")
                        .HasForeignKey("StudentFeeAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeCollectionSchedule");

                    b.Navigation("StudentFeeAssignment");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.StudentFeeAssignment", b =>
                {
                    b.HasOne("Waaed.Finance.Api.Entities.FeeCollectionSchedule", "FeeCollectionSchedule")
                        .WithMany("StudentFeeAssignments")
                        .HasForeignKey("FeeCollectionScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waaed.Finance.Api.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FeeCollectionSchedule");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.Budget", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCategory", b =>
                {
                    b.Navigation("FeeCategoryBatches");

                    b.Navigation("FeeCollectionSchedules");

                    b.Navigation("FeeDiscounts");

                    b.Navigation("FeeParticulars");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeCollectionSchedule", b =>
                {
                    b.Navigation("FeePayments");

                    b.Navigation("StudentFeeAssignments");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.FeeStructure", b =>
                {
                    b.Navigation("FeeCollections");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.Student", b =>
                {
                    b.Navigation("FeeCollections");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.StudentFeeAssignment", b =>
                {
                    b.Navigation("FeePayments");
                });

            modelBuilder.Entity("Waaed.Finance.Api.Entities.TaxType", b =>
                {
                    b.Navigation("FeeParticulars");
                });
#pragma warning restore 612, 618
        }
    }
}
